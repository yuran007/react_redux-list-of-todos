{"version":3,"sources":["types/ShowTodos.ts","features/currentTodo.ts","features/filter.ts","types/StatusTodos.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["ShowTodos","actions","todo","type","payload","currentTodoReducer","state","action","StatusTodos","query","status","filterReducer","All","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoList","dispatch","selectedStatus","visibleTodos","React","useMemo","showTodos","Active","completed","Completed","getVisibleTodos","filteredTodos","filterQuery","title","toLowerCase","includes","className","map","cn","id","onClick","currentTodoActions","TodoFilter","onChange","event","target","value","filterActions","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","todoID","email","name","useState","isLoading","setIsLoading","user","setUser","useEffect","userId","fetchedUser","finally","href","App","fetchedTodos","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42c61112.chunk.js","sourcesContent":["export const enum ShowTodos {\n  All,\n  Active,\n  Completed,\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { ShowTodos } from '../types/ShowTodos';\n\ntype SetQueryAction = {\n  type: 'filterQuery/SET';\n  payload: string | null\n};\ntype RemoveQueryAction = {\n  type: 'filterQuery/REMOVE';\n};\ntype SetStatusAction = {\n  type: 'filterStatus/SET';\n  payload: ShowTodos;\n};\n\nconst setQuery = (query: string | null): SetQueryAction => ({\n  type: 'filterQuery/SET',\n  payload: query,\n});\n\nconst removeQuery = (): RemoveQueryAction => ({\n  type: 'filterQuery/REMOVE',\n});\n\nconst setStatus = (status: ShowTodos): SetStatusAction => ({\n  type: 'filterStatus/SET',\n  payload: status,\n});\n\nexport const actions = { setQuery, removeQuery, setStatus };\n\ntype State = {\n  query: string | null,\n  status: ShowTodos,\n};\ntype Action = SetQueryAction | RemoveQueryAction | SetStatusAction;\n\nconst filterReducer = (\n  state: State = { query: null, status: ShowTodos.All },\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'filterQuery/SET':\n      return { ...state, query: action.payload };\n\n    case 'filterQuery/REMOVE':\n      return { ...state, query: null };\n\n    case 'filterStatus/SET':\n      return { ...state, status: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","export const enum StatusTodos {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype GetTodosAction = { type: 'todos/GET', payload: Todo[] };\n\nconst getTodos = (todos: Todo[]): GetTodosAction => ({\n  type: 'todos/GET',\n  payload: todos,\n});\n\nexport const actions = { getTodos };\n\ntype State = Todo[];\ntype Action = GetTodosAction;\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'todos/GET':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nimport { ShowTodos } from '../../types/ShowTodos';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const selectedStatus = useAppSelector(state => state.filter.status);\n  const query = useAppSelector(state => state.filter.query);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const getVisibleTodos = (showTodos: ShowTodos) => {\n    switch (showTodos) {\n      case ShowTodos.Active:\n        return todos.filter(todo => !todo.completed);\n\n      case ShowTodos.Completed:\n        return todos.filter(todo => todo.completed);\n\n      default:\n        return todos;\n    }\n  };\n\n  const visibleTodos = React.useMemo(\n    () => getVisibleTodos(selectedStatus),\n    [selectedStatus, todos],\n  );\n\n  const getFilteredTodos = (filterQuery: null | string) => {\n    return filterQuery\n      ? visibleTodos.filter(todo => todo.title.toLowerCase()\n        .includes(filterQuery.toLowerCase()))\n      : visibleTodos;\n  };\n\n  const filteredTodos = React.useMemo(\n    () => getFilteredTodos(query),\n    [query, visibleTodos],\n  );\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': currentTodo?.id === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => dispatch(currentTodoActions.setTodo(todo))}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn(\n                      'far',\n                      {\n                        'fa-eye': currentTodo?.id !== todo.id,\n                        'fa-eye-slash': currentTodo?.id === todo.id,\n                      },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\n\nimport { StatusTodos } from '../../types/StatusTodos';\nimport { ShowTodos } from '../../types/ShowTodos';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const query = useAppSelector(state => state.filter.query);\n\n  const handleFilterStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (event.target.value) {\n      case StatusTodos.Active:\n        dispatch(filterActions.setStatus(ShowTodos.Active));\n        break;\n\n      case StatusTodos.Completed:\n        dispatch(filterActions.setStatus(ShowTodos.Completed));\n        break;\n\n      default:\n        dispatch(filterActions.setStatus(ShowTodos.All));\n        break;\n    }\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(filterActions.setQuery(event.target.value));\n  };\n\n  const clearQuery = () => dispatch(filterActions.setQuery(null));\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={handleFilterStatus}\n            data-cy=\"statusSelect\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={query ?? ''}\n          onChange={handleQueryChange}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {!!query && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQuery}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n  const clearTodo = () => dispatch(currentTodoActions.removeTodo());\n\n  let todoID;\n  let title;\n  let completed;\n\n  if (currentTodo) {\n    ({ id: todoID, title, completed } = currentTodo);\n  }\n\n  useEffect(() => {\n    if (currentTodo) {\n      getUser(currentTodo.userId)\n        .then(fetchedUser => setUser(fetchedUser))\n        .finally(() => setIsLoading(false));\n    }\n  }, [currentTodo]);\n\n  let email;\n  let name;\n\n  if (user) {\n    ({ email, name } = user);\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoID}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={clearTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={cn({\n                'has-text-success': completed,\n                'has-text-danger': !completed,\n              })}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              {user && (\n                <a href={`mailto:${email}`}>{name}</a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\n\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getTodos()\n      .then(fetchedTodos => dispatch(todosActions.getTodos(fetchedTodos)))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? <Loader /> : <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}