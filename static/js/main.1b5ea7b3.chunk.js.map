{"version":3,"sources":["types/ShowTodos.ts","features/currentTodo.ts","features/filter.ts","types/StatusTodos.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["ShowTodos","actions","todo","type","payload","currentTodoReducer","state","action","StatusTodos","query","status","filterReducer","All","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoList","dispatch","visibleTodos","React","useMemo","showTodos","Active","completed","Completed","getVisibleTodos","filteredTodos","filterQuery","title","toLowerCase","includes","className","map","cn","id","onClick","currentTodoActions","TodoFilter","setQuery","filterActions","setStatus","onSubmit","event","preventDefault","onChange","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","isLoading","setIsLoading","error","setError","user","setUser","useEffect","userId","fetchedUser","catch","finally","href","email","name","App","fetchedTodos","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b5ea7b3.chunk.js","sourcesContent":["export const enum ShowTodos {\n  All,\n  Active,\n  Completed,\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { ShowTodos } from '../types/ShowTodos';\n\ntype SetQueryAction = {\n  type: 'filterQuery/SET';\n  payload: string;\n};\ntype RemoveQueryAction = {\n  type: 'filterQuery/REMOVE';\n};\ntype SetStatusAction = {\n  type: 'filterStatus/SET';\n  payload: ShowTodos;\n};\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filterQuery/SET',\n  payload: query,\n});\n\nconst removeQuery = (): RemoveQueryAction => ({\n  type: 'filterQuery/REMOVE',\n});\n\nconst setStatus = (status: ShowTodos): SetStatusAction => ({\n  type: 'filterStatus/SET',\n  payload: status,\n});\n\nexport const actions = { setQuery, removeQuery, setStatus };\n\ntype State = {\n  query: string,\n  status: ShowTodos,\n};\ntype Action = SetQueryAction | RemoveQueryAction | SetStatusAction;\n\nconst filterReducer = (\n  state: State = { query: '', status: ShowTodos.All },\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'filterQuery/SET':\n      return { ...state, query: action.payload };\n\n    case 'filterQuery/REMOVE':\n      return { ...state, query: '' };\n\n    case 'filterStatus/SET':\n      return { ...state, status: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","export const enum StatusTodos {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype GetTodosAction = { type: 'todos/GET', payload: Todo[] };\n\nconst getTodos = (todos: Todo[]): GetTodosAction => ({\n  type: 'todos/GET',\n  payload: todos,\n});\n\nexport const actions = { getTodos };\n\ntype State = Todo[];\ntype Action = GetTodosAction;\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'todos/GET':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nimport { ShowTodos } from '../../types/ShowTodos';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const { status, query } = useAppSelector(state => state.filter);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const getVisibleTodos = (showTodos: ShowTodos) => {\n    switch (showTodos) {\n      case ShowTodos.Active:\n        return todos.filter(todo => !todo.completed);\n\n      case ShowTodos.Completed:\n        return todos.filter(todo => todo.completed);\n\n      default:\n        return todos;\n    }\n  };\n\n  const visibleTodos = React.useMemo(\n    () => getVisibleTodos(status),\n    [status, todos],\n  );\n\n  const getFilteredTodos = (filterQuery: null | string) => {\n    return filterQuery\n      ? visibleTodos.filter(todo => todo.title.toLowerCase()\n        .includes(filterQuery.toLowerCase()))\n      : visibleTodos;\n  };\n\n  const filteredTodos = React.useMemo(\n    () => getFilteredTodos(query),\n    [query, visibleTodos],\n  );\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': currentTodo?.id === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => dispatch(currentTodoActions.setTodo(todo))}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn(\n                      'far',\n                      {\n                        'fa-eye': currentTodo?.id !== todo.id,\n                        'fa-eye-slash': currentTodo?.id === todo.id,\n                      },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\n\nimport { StatusTodos } from '../../types/StatusTodos';\nimport { ShowTodos } from '../../types/ShowTodos';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const query = useAppSelector(state => state.filter.query);\n  const { setQuery, setStatus } = filterActions;\n\n  const handleFilterStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (event.target.value) {\n      case StatusTodos.Active:\n        dispatch(setStatus(ShowTodos.Active));\n        break;\n\n      case StatusTodos.Completed:\n        dispatch(setStatus(ShowTodos.Completed));\n        break;\n\n      default:\n        dispatch(setStatus(ShowTodos.All));\n        break;\n    }\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setQuery(event.target.value));\n  };\n\n  const clearQuery = () => dispatch(setQuery(''));\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={handleFilterStatus}\n            data-cy=\"statusSelect\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={query}\n          onChange={handleQueryChange}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {!!query && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQuery}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [user, setUser] = useState<User | null>(null);\n  const clearTodo = () => dispatch(currentTodoActions.removeTodo());\n\n  useEffect(() => {\n    if (currentTodo) {\n      getUser(currentTodo.userId)\n        .then(fetchedUser => setUser(fetchedUser))\n        .catch(() => setError('Error loading user'))\n        .finally(() => setIsLoading(false));\n    }\n  }, [currentTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading && <Loader />}\n\n      {!isLoading && error\n        ? (<p>{error}</p>)\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {currentTodo && `Todo #${currentTodo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={clearTodo}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {currentTodo && currentTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong className={cn(\n                  currentTodo && {\n                    'has-text-success': currentTodo.completed,\n                    'has-text-danger': !currentTodo.completed,\n                  },\n                )}\n                >\n                  {currentTodo && currentTodo.completed ? 'Done' : 'Planned'}\n                </strong>\n\n                {' by '}\n\n                {user && (\n                  <a href={`mailto:${user.email}`}>{user.name}</a>\n                )}\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\n\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(fetchedTodos => dispatch(todosActions.getTodos(fetchedTodos)))\n      .catch(() => setError('Error loading todos'))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {!isLoading && error\n                ? <p>{error}</p>\n                : <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}